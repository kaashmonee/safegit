import sys
import os
import subprocess
from git import Repo
import gitdb
import gitdb.exc
from typing import List

"""
Mostly generated by GPT4o with the prompt:
i want to write a command line tool in python that's a wrapper to git but 
doesn't allow a commit if the staged files are not part of the codeowners
"""

# Path to the repository
REPO_PATH = os.getcwd()

# Path to CODEOWNERS file
CODEOWNERS_PATH = os.path.join(REPO_PATH, 'CODEOWNERS')

def get_staged_files(repo: Repo)-> List[str]:
    """Return a list of staged files."""
    try:
        staged_items = repo.index.diff("HEAD")
    except gitdb.exc.BadName as e:
        print("No staged items:", e)
        return []

    return [item.a_path for item in staged_items]

def parse_codeowners(codeowners_path):
    """Parse the CODEOWNERS file into a dictionary."""
    codeowners = {}
    if not os.path.exists(codeowners_path):
        raise FileNotFoundError("Expect a CODEOWNERS file in the repo")

    with open(codeowners_path, 'r') as f:
        for line in f:
            line = line.strip()
            if not line or line.startswith('#'):
                continue
            parts = line.split()
            pattern = parts[0]
            owners = parts[1:]
            codeowners[pattern] = owners
    return codeowners

def is_file_owned(file, codeowners):
    """Check if the file is in the codeowners' scope."""
    for pattern in codeowners:
        # Simple pattern matching, can use fnmatch or regex for more complex matching
        if file.startswith(pattern):
            return True
    return False

def main():
    if not os.path.isdir(REPO_PATH):
        print("Not a valid repository directory")
        sys.exit(1)

    repo = Repo(REPO_PATH)
    
    if repo.bare:
        print("Repository is bare")
        sys.exit(1)

    staged_files = get_staged_files(repo)
    codeowners = parse_codeowners(CODEOWNERS_PATH)

    # Check if all staged files are owned
    unowned_files = [f for f in staged_files if not is_file_owned(f, codeowners)]

    if unowned_files:
        print("The following staged files are not in CODEOWNERS:")
        for file in unowned_files:
            print(file)
        sys.exit(1)
    
    # If everything is OK, execute the git commit command
    commit_message = " ".join(sys.argv[1:])
    subprocess.run(["git", "commit", "-m", commit_message])

if __name__ == '__main__':
    main()
